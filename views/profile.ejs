<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Lettuce 프로필</title>
  <link rel="stylesheet" href="/static/css/profile.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css" integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
  <link rel="stylesheet" href="/static/css/board.css" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.1/font/bootstrap-icons.css" />
  <script src="https://code.jquery.com/jquery-3.6.1.min.js" integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.27.2/axios.min.js" integrity="sha512-odNmoc1XJy5x1TMVMdC7EMs3IVdItLPlCeL5vSUPN2llYKMJ2eByTTAIiiuqLg+GdNr9hF6z81p27DArRFKT7A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"></script>
  <a href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"></a>

  <style>
    .list {
      display: flex;
      flex-wrap: wrap;
      justify-content: left;
      width: 100%;
      margin: auto;
    }

    #bookmarkBtn {
      border: none;
      background-color: transparent;
    }

    .imgWrap {
        width: 430px;
        height: 430px;
        cursor: pointer;
        transition: 0.5s;
        position: relative;
      }
      .imgWrap > .icons{
        display: none;

      }
      .imgWrap:hover > .icons{
        display: block;
      }
      .imgWrap > .video-icons {
        display: none;
      }
      .imgWrap:hover > .video-icons {
        display: block;
      }
      .icons{
        position: absolute;
        bottom: 10px;
        left: 10px;
      }
      .video-icons{
        position: absolute;
        bottom: 60px;
        left: 10px;
      }
  </style>
  <style>
    body{
      overflow-y: scroll
    }
  </style>
</head>

<body>
  <%-include('navbar.ejs') %>
  <!-- 상단부 -->
  <div class="head-wrap">
    <div class="profileDiv">
      <img id="profilePic" src="<%=data.profile%>" />
    </div>
    <div class="infoDiv">
      <div style="
            display: flex;
            align-items: center;
            justify-content: space-around;
            margin-bottom: 25px;
          ">
        <div id="nickname"><%=data.nickName %></div>
        <% if (data.isMyprofile == true) { %>
        <form action="/profile/mypage" method="get">
          <button id="profileEditBtn">프로필 편집</button>
        </form>
        <% } else if(data.isFollow != 0){%>
        <button id="followBtn" onclick="unfollow();">언팔로우</button>
        <% } else { %>
        <button id="followBtn" onclick="follow();">팔로우</button>
        <% } %>
      </div>

      <div id="id" style="display: none"><%=data.id%></div>
      <div style="
            display: flex;
            justify-content: space-around;
            margin-bottom: 25px;
          ">
        <div>
          <div>
            <span>게시물</span><span style="font-weight: bolder"> <%=data.posting%> </span>
          </div>
        </div>
        <div>
          <a href="#" data-bs-toggle="modal" data-bs-target="#followModal" onclick="followList('following');">
            <div>
              <span>팔로잉</span><span id="following" style="font-weight: bolder"> <%=data.following%></span>
            </div>
          </a>
        </div>
        <div>
          <a href="#" data-bs-toggle="modal" data-bs-target="#followModal" onclick="followList('follower');">
            <div>
              <span>팔로워</span><span style="font-weight: bolder"> <%=data.follower%></span>
            </div>
          </a>
        </div>
      </div>
      <div style="
            display: flex;
            align-items: center;
            justify-content: space-around;
            margin-bottom: 25px;
          ">
        <div id="email">
          <i class="fa-regular fa-envelope"></i> <%=data.email%>
        </div>

        <% if (data.isMyprofile) { %>
        <div id="logoutDiv">
          <a href="/profile/logout"><button id="logoutBtn" type="button">로그아웃</button></a>
        </div>
        <% } %>
      </div>
      <div class="introduction">
        <% if(data.comment) { %>
          <span style="font-weight: bolder;">" <%=data.comment%> "</span>
        <%} else {%>
          <span style="color: lightgrey;">소개글이 비어있습니다.</span>
        <%}%>
      </div>
    </div>
  </div>

  <div class="seperator"></div>
  <!-- 게시글 탭  게시글 본문 -->
  <section class="post-area">
    <div class="tabs">
      <div id="line"></div>
      <button id="bookmarkBtn" type="button" onclick="reset(false);">
        <div id="posts"><i class="fa-regular fa-image"></i> POSTS</div>
      </button>
      <button id="bookmarkBtn" type="button" onclick="reset(true);">
        <div id="saved"><i class="fa-regular fa-bookmark"></i> SAVED</div>
      </button>
    </div>
    <div id="board"></div>
  </section>

  <% if (data.posting == 0) {%>
  <div class="con">
    <div class="noFollowers">
      <p style="color: lightgrey;" class="noFollowText">표시할 게시물이 없어요.</p>
      <p style="color: lightgrey;" class="subText">
        첫 게시물을 작성해보세요 :)
      </p>
      <img id="logo" src="/static/image/logo.png" alt="" />
    </div>
  </div>
  <% } %>
  <!-- 게시글 -->
  <div class="container">
    <div class="list"></div>
  </div>
  <div class="more">
    <p class="virtual"></p>
    <div class="square dnone">
      <div class="spin"></div>
    </div>
  </div>

  <!-- 팔로잉 모달 -->
  <div class="modal" id="followModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable" style="width: 370px;">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="follow-title"></h5>
          <button type="button" class="btn-close" style="margin: 0; padding: 0" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div style="text-align: center" class="modal-body" id="followList"></div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
            Close
          </button>
        </div>
      </div>
    </div>
  </div>

  <script type="text/javascript" defer src="/static/js/profile.js"></script>

  <!-- 스크립트 -->
  <script>
    let cnt = 0;
    let isBookmark = false;
    let id = $("#id").text();
    const $list = document.querySelector(".list");

    function followList(mode) {
      var modalBody = document.querySelector("#followList");
      var modalTitle = $("#follow-title");
      if (mode == "following") {
        modalTitle.html("팔로잉 목록");
      } else if (mode == "follower") {
        modalTitle.html("팔로워 목록");
      }
      var data = {
        id: id,
      };
      axios({
        url: "/profile/getFollowList",
        method: "get",
        params: data,
      }).then((response) => {
        console.log(response.data);
        var html = "";
        var tmp = document.createElement("div");
        var followMode = response.data[mode];

        if (response.data[mode].length == 0) {
          html += `목록이 비어있습니다. 네트워킹을 시작하세요!`;
        } else {
          if (mode == 'following' && response.data.id == id){
          for (var i = 0; i < followMode.length; i++) {
            html += `<div style="cursor: pointer">
                      <div class="followingUser">
                        <div style = "display: flex; gap: 10px;">
                        <div>
                        <img class="followProfile" src="${followMode[i].profile}" onclick="location.href='profile?id=${followMode[i].id}';">
                        </div>
                      <div class="followTextInfo">
                        <span class="followUserEmail" onclick="location.href='profile?id=${followMode[i].id}';">${followMode[i].email}</span>
                        <span class="followUserName" onclick="location.href='profile?id=${followMode[i].id}';">${followMode[i].nickName}</span>
                      </div>
                    </div>
                      <button class="unfollowBtn" type="button" onclick="unfollowInList(${followMode[i].id});">언팔로우</button>
                    </div>
                    </div>`;
          }
        }
        else{
          for (var i = 0; i < followMode.length; i++) {
            html += `<div style="cursor: pointer">
                      <div class="followingUser">
                        <div style = "display: flex; gap: 10px;">
                        <div>
                        <img class="followProfile" src="${followMode[i].profile}" onclick="location.href='profile?id=${followMode[i].id}';">
                        </div>
                      <div class="followTextInfo">
                        <span class="followUserEmail" onclick="location.href='profile?id=${followMode[i].id}';">${followMode[i].email}</span>
                        <span class="followUserName" onclick="location.href='profile?id=${followMode[i].id}';">${followMode[i].nickName}</span>
                      </div>
                    </div>
                    <button class="visitBtn" type="button" onclick="location.href='profile?id=${followMode[i].id}';">프로필</button>
                      </div>
                    </div>`;
          }
        }
        }
        modalBody.innerHTML = html;
      });
    }

    function follow() {
      var data = {
        id: id,
      };
      console.log(id);
      axios({
        url: "/profile/follow",
        method: "post",
        data: data,
      }).then((response) => {
        window.location.href = `http://49.50.167.217:8000/profile?id=${id}`;
      });
    }

    function unfollow() {
      var data = {
        id: id,
      };
      console.log(id);
      axios({
        url: "/profile/unfollow",
        method: "post",
        data: data,
      }).then((response) => {
        window.location.href = `http://49.50.167.217:8000/profile?id=${id}`;
      });
    }

    function unfollowInList(id) {
      var data = {
        id: id,
      };
      axios({
        url: "/profile/unfollow",
        method: "post",
        data: data,
      }).then((response) => {
        followList('following');
        $("#following").html(` ${response.data.following}`);
      });
    }

    // 북마크 검색을 위한 초기화
    function reset(isBookmark) {
      if (isBookmark == true) {
        $(".subText").text("다른 사람들의 게시글을 북마크 해보세요 :)");
        $(".list").empty();
      } else {
        $(".subText").text("첫 게시물을 작성해보세요 :)");
        $(".list").empty();
      }

      // 매 검색마다 무한스크롤 옵저버 초기화
      intersectionObserver.unobserve(document.querySelector(".virtual"));
      cnt = 0;
      $(".list").empty();

      // 새로운 옵저버 선언
      intersectionObserver = new IntersectionObserver(function(entries) {
        if (entries[0].intersectionRatio <= 0) return;
        loadItems(isBookmark);
      });
      // 옵저빙 시작
      intersectionObserver.observe(document.querySelector(".virtual"));
    }

    // Simulate a request to load data and render it to the list element;
    function loadItems(isBookmark) {
      new Promise((resolve) => {
        document.querySelector(".square").classList.remove("dnone");
        setTimeout(async () => {
          let data;
          if (isBookmark) {
            console.log("yes");
            data = await axios.get(
              `/profile/post?id=${id}&bookmark=yes&cnt=${cnt}`
            );
          } else {
            console.log("no");
            data = await axios.get(
              `/profile/post?id=${id}&bookmark=no&cnt=${cnt}`
            );
          }
          cnt += 1;
          resolve(data.data);
        }, 1000);
      }).then((data) => {
        if (data.code == 200) {
          const html = data.data.map(
            (item) => ( item.src[0].type == "img" ?  `<div class="imgWrap">
                  <div class="icons">
                    <i class="fa-regular fa-comments"> ${item.commentCnt}</i>
                    <i class="fa-regular fa-heart"> ${item.likeCnt}</i>
                  </div>
                  <img id="${item.id}" class="yeah" src="${item.src[0].src}" onclick = "getItem(${item.id});" data-bs-target = "#boardModal" like = "${item.likeCnt}" comment = "${item.commentCnt}">
                </div>` :`<div class="imgWrap">
                            <div class="video-icons">
                              <i class="fa-regular fa-comments"> ${item.commentCnt}</i>
                              <i class="fa-regular fa-heart"> ${item.likeCnt}</i>
                            </div>
                            <div class="yeah"><video class="videoPosting" controls="" onmouseover="videoPlay(this);" onmouseout="videoStop(this);" muted="" loop="loop" onclick = "getItem(${item.id});" id="${item.id}"><source src="${item.src[0].src}" type="video/mp4"></video></div>
                            </div>`)
          );
          $list.innerHTML += html.join("");
        } else {
          intersectionObserver.unobserve(document.querySelector(".virtual"));
        }
        document.querySelector(".square").classList.add("dnone");
      });
    }

    let intersectionObserver = new IntersectionObserver(function(entries) {
      // If intersectionRatio is 0, the target is out of view
      // and we do not need to do anything.
      if (entries[0].intersectionRatio <= 0) return;
      loadItems(isBookmark);
    });
    // start observing
    intersectionObserver.observe(document.querySelector(".virtual"));
  </script>

  <script>
    async function deleteComent(event) {
      const comentD = await axios.post("comment/commentDelete", {
        id: event.target.getAttribute("value"),
      });
      if (comentD.data.code == 200) {
        const postId = event.target.getAttribute("url");
        const commentId = event.target.getAttribute("value");
        const res = await axios.get(`/comment/comments?PostId=${postId}`);
        document.querySelectorAll(`#c${postId}`).forEach((c) => {
          c.remove();
        });
        const space = document.querySelector(`div[url="${postId}"].comments`);
        res.data.forEach((res) => {
          let tag = `<a href="/profile?id=${res["User.id"]}"> <div class="come">
                <img src="${res["User.profile"]}"> ${res["User.nickName"]}</a>:${res.comment}
                </div>`;
          if (res.me) {
            tag += `<button type="button" id ="delete" onclick="deleteComent(event)" url="${postId}"value="${res.id}">삭제</button>`;
          }
          const div = `<div class="commentPlace" id="c${postId}"> ${tag} </div>`;
          space.innerHTML += div;
          console.log(space);
        });
        swal("", "댓글 삭제 성공", "success");
      }
    }
    async function like(event) {
      if (event.target.getAttribute("value") == "1") {
        event.target.setAttribute("value", "0");
        event.target.classList.remove("bi-heart-fill");
        event.target.classList.add("bi-heart");
      } else {
        event.target.classList.add("bi-heart-fill");
        event.target.classList.remove("bi-heart");
        event.target.setAttribute("value", "1");
      }
      const postId = event.target.getAttribute("url");
      const res = await axios.post("like/likes", {
        postId: postId,
      });
      if (res.data.code == 200) {
        swal("", "좋아요 등록 완료!", "success");
      } else {
        swal("", "좋아요 취소", "success");
      }
      const send = await axios.get(`like/likeCount?PostId=${postId}`);
      document.querySelector(
        `#like${postId}`
      ).innerHTML = `<a href="#" data-bs-toggle="modal" data-bs-target="#likeModal" value="${postId}"  onclick="likeList(event)">${send.data.Count}명이 좋아합니다.</a>`;
      console.log(send);
    }

    function likeList(event) {
      const postid = event.target.getAttribute("value");

      const data = {
        PostId: postid,
      };
      axios({
        url: "/like/list",
        method: "get",
        params: data,
      }).then((response) => {
        let modalBody = document.querySelector("#llist");
        modalBody.innerHTML = "";
        let html = "";
        let ListMode = response.data.data;
        for (let i = 0; i < ListMode.length; i++) {
          html += `<div style="cursor: pointer">
                      <div class="likeUser" onclick="location.href='profile?id=${ListMode[i].id}';">
                        <img class="likeProfile" src="${ListMode[i].profile}" alt="">
                        <span class="userName">${ListMode[i].nickName}</span>
                        <span class="userEmail">${ListMode[i].email}</span>
                      </div>
                    </div>`;
        }
        modalBody.innerHTML = html;
      });
    }

    function commentlist(event) {
      const postid = event.target.getAttribute("value");
      const data = {
        PostId: postid
      };
      axios({
        url: "/comment/commentList",
        method: "get",
        params: data,
      }).then((response) => {
        console.log(response.data);
        let modalBody = document.querySelector("#clist");
        modalBody.innerHTML = "";
        let html = "";
        let ListMode = response.data;
        for (let i = 0; i < ListMode.length; i++) {
          if (ListMode[i].me) {
            html += `<div style="cursor: pointer">
                      <div class="commentUser" onclick="location.href='profile?id=${ListMode[i]["User.id"]}';">
                        <img class="commentProfile" src="${ListMode[i]["User.profile"]}" alt="">
                        <span class="commentuserName">${ListMode[i]["User.nickName"]}</span>
                        <span class="commentuserComment">${ListMode[i]["comment"]}</span>
                      </div>
                      <i id ="deleteComment" onclick="listDelete(event)" url="${postid}"value="${ListMode[i].id}" class="fa-solid fa-trash"></i>
                    </div>`;
          } else {
            html += `<div style="cursor: pointer">
                      <div class="commentUser" onclick="location.href='profile?id=${ListMode[i]["User.id"]}';">
                        <img class="commentProfile" src="${ListMode[i]["User.profile"]}" alt="">
                        <span class="commentuserName">${ListMode[i]["User.nickName"]}</span>
                        <span class="commentuserComment">${ListMode[i]["comment"]}</span>
                      </div>
                    </div>`;
          }
        }
        modalBody.innerHTML = html;
      });
    }

    async function listDelete(event) {
      const comentD = await axios.post("comment/commentDelete", {
        id: event.target.getAttribute("value"),
      });

      if (comentD.data.code == 200) {
        event.target.parentNode.parentNode.innerHTML = "";
        console.log(event.target.parentNode.parentNode);
        const postid = event.target.getAttribute("url");
        const data = {
          PostId: postid
        };
        axios({
          url: "/comment/commentList",
          method: "get",
          params: data,
        }).then((response) => {
          console.log(response.data);
          let modalBody = document.querySelector("#clist");
          modalBody.innerHTML = "";
          let html = "";
          let ListMode = response.data;
          for (let i = 0; i < ListMode.length; i++) {
            if (ListMode[i].me) {
              html += `<div style="cursor: pointer">
                      <div class="commentUser" onclick="location.href='profile?id=${ListMode[i]["User.id"]}';">
                        <img class="commentProfile" src="${ListMode[i]["User.profile"]}" alt="">
                        <span class="commentuserName">${ListMode[i]["User.nickName"]}</span>
                        <span class="commentuserComment">${ListMode[i]["comment"]}</span>
                      </div>
                      <i id ="deleteComment" onclick="listDelete(event)" url="${postid}"value="${ListMode[i].id}" class="fa-solid fa-trash"></i>
                    </div>`;
            } else {
              html += `<div style="cursor: pointer">
                      <div class="commentUser" onclick="location.href='profile?id=${ListMode[i]["User.id"]}';">
                        <img class="commentProfile" src="${ListMode[i]["User.profile"]}" alt="">
                        <span class="commentuserName">${ListMode[i]["User.nickName"]}</span>
                        <span class="commentuserComment">${ListMode[i]["comment"]}</span>
                      </div>
                    </div>`;
            }
          }

          modalBody.innerHTML = html;
        });
        const target = document.querySelector(`#delete[url="${postid}"]`);
        const wrap = {
          target: target
        };
        deleteComent(wrap);
      }
    }

    async function bookmark(event) {
      if (event.target.getAttribute("value") == "0") {
        event.target.setAttribute("value", "1");
        event.target.setAttribute("class", "bi bi-bookmark-fill");
      } else {
        event.target.setAttribute("value", "0");
        event.target.setAttribute("class", "bi bi-bookmark");
      }
      const res = await axios.post("/profile/bookmark", {
        postId: event.target.getAttribute("url"),
      });
      if (res.data.code == 200) {
        swal("", "북마크 등록 완료!", "success");
      } else {
        swal("", "북마크 취소 완료!", "success");
      }
    }

  function videoPlay(e) {
    e.play();
  }
  function videoStop(e) {
    e.pause();
  }

  </script>
  <script src="../static/js/searchUser.js"></script>
  <script src="https://cdn.socket.io/4.5.0/socket.io.min.js"></script>
  <script src="../static/js/notification.js"></script>
  <script src="/static/js/board.js"></script>
</body>

</html>